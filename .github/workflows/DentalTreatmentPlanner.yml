name: Build and deploy .NET Core application to Web App DentalTreatmentPlanner with API Management Service DentalTreatmentPlannerServerapi-DentalTreatmentPlannerServer
on:
  push:
    branches:
    - master
env:
  AZURE_WEBAPP_NAME: DentalTreatmentPlanner
  AZURE_WEBAPP_PACKAGE_PATH: DentalTreatmentPlanner.Server/publish
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: Navident
  AZURE_APIM_SERVICENAME: DentalTreatmentPlannerServerapi
  AZURE_APIM_API_ID: DentalTreatmentPlannerServer
  AZURE_APIM_APPSERVICEURL: https://dentaltreatmentplanner.azurewebsites.net
  SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 5.6.3
  SWASHBUCKLE_DOTNET_CORE_VERSION: 3.1.x
  API_IMPORT_SPECIFICATION_PATH: DentalTreatmentPlanner.Server/publish/swagger.json
  API_IMPORT_DLL: DentalTreatmentPlanner.Server/bin/Release/net8.0/DentalTreatmentPlanner.Server.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: DentalTreatmentPlanner.Server
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Setup SwashBuckle .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.SWASHBUCKLE_DOTNET_CORE_VERSION }}

    # Dynamically create .env.production for React app - start
    - name: Create .env.production file for React app
      run: |
        echo "VITE_OPENAI_API_KEY=${{ secrets.VITE_OPENAI_API_KEY }}" > ./dentaltreatmentplanner.client/.env.production
      shell: bash
    # Dynamically create .env.production for React app - END

    - name: Restore
      run: dotnet restore ${{ env.WORKING_DIRECTORY }}
    - name: Build
      run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build
    - name: Publish
      run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.DentalTreatmentPlanner_1517 }}

